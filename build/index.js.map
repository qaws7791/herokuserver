{"version":3,"sources":["../src/index.js"],"names":["startServer","app","server","ApolloServer","typeDefs","resolvers","applyMiddleware","mongoose","connect","useNewUrlParser","useUnifiedTopology","listen","port","console","log","graphqlPath"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAUA,IAAMA,WAAW;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJ,0BADI;AAGVC,YAAAA,MAHU,GAGD,IAAIC,iCAAJ,CAAiB;AAC5BC,cAAAA,QAAQ,EAARA,kBAD4B;AAE5BC,cAAAA,SAAS,EAATA;AAF4B,aAAjB,CAHC;AAQdH,YAAAA,MAAM,CAACI,eAAP,CAAuB;AAAEL,cAAAA,GAAG,EAAHA;AAAF,aAAvB;AARc;AAAA,mBAURM,qBAASC,OAAT,CAAiB,iCAAjB,EAAmD;AACpDC,cAAAA,eAAe,EAAE,IADmC;AAEpDC,cAAAA,kBAAkB,EAAE;AAFgC,aAAnD,CAVQ;;AAAA;AAedT,YAAAA,GAAG,CAACU,MAAJ,CAAW;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAX,EAA2B;AAAA,qBACzBC,OAAO,CAACC,GAAR,6DAAuDZ,MAAM,CAACa,WAA9D,EADyB;AAAA,aAA3B;;AAfc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXf,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAqBAA,WAAW","sourcesContent":["import { ApolloServer, gql } from 'apollo-server-express';\r\nimport express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { typeDefs } from \"./typeDefs\";\r\nimport { resolvers } from \"./resolvers\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst startServer = async () => {\r\n    const app = express();\r\n\r\n    const server = new ApolloServer({\r\n        typeDefs,\r\n        resolvers,\r\n      });\r\n      \r\n      server.applyMiddleware({ app });\r\n      \r\n      await mongoose.connect('mongodb://localhost:27017/graph',{\r\n           useNewUrlParser: true, \r\n           useUnifiedTopology: true\r\n      });\r\n\r\n      app.listen({ port: 4000 }, () =>\r\n        console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\r\n      );\r\n\r\n};\r\n\r\nstartServer();"],"file":"index.js"}