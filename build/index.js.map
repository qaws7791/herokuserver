{"version":3,"sources":["../src/index.js"],"names":["startServer","app","PORT","process","env","server","ApolloServer","typeDefs","resolvers","applyMiddleware","mongoose","connect","useNewUrlParser","useUnifiedTopology","listen","console","log","graphqlPath"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAWA,IAAMA,WAAW;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJ,0BADI;AAGVC,YAAAA,IAHU,GAGHC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAHjB;AAKVG,YAAAA,MALU,GAKD,IAAIC,iCAAJ,CAAiB;AAC5BC,cAAAA,QAAQ,EAARA,kBAD4B;AAE5BC,cAAAA,SAAS,EAATA;AAF4B,aAAjB,CALC;AAUdH,YAAAA,MAAM,CAACI,eAAP,CAAuB;AAAER,cAAAA,GAAG,EAAHA;AAAF,aAAvB;AAVc;AAAA,mBAYRS,qBAASC,OAAT,CAAiB,iCAAjB,EAAmD;AACpDC,cAAAA,eAAe,EAAE,IADmC;AAEpDC,cAAAA,kBAAkB,EAAE;AAFgC,aAAnD,CAZQ;;AAAA;AAiBdZ,YAAAA,GAAG,CAACa,MAAJ,CAAWZ,IAAX,EAAiB;AAAA,qBACfa,OAAO,CAACC,GAAR,6DAAuDX,MAAM,CAACY,WAA9D,EADe;AAAA,aAAjB;;AAjBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXjB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAuBAA,WAAW","sourcesContent":["import { ApolloServer, gql } from 'apollo-server-express';\r\nimport express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { typeDefs } from \"./typeDefs\";\r\nimport { resolvers } from \"./resolvers\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst startServer = async () => {\r\n    const app = express();\r\n\r\n    const PORT = process.env.PORT || 4000;\r\n\r\n    const server = new ApolloServer({\r\n        typeDefs,\r\n        resolvers,\r\n      });\r\n      \r\n      server.applyMiddleware({ app });\r\n      \r\n      await mongoose.connect('mongodb://localhost:27017/graph',{\r\n           useNewUrlParser: true, \r\n           useUnifiedTopology: true\r\n      });\r\n\r\n      app.listen(PORT, () =>\r\n        console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\r\n      );\r\n\r\n};\r\n\r\nstartServer();"],"file":"index.js"}