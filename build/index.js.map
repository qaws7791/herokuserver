{"version":3,"sources":["../src/index.js"],"names":["startServer","app","use","cors","all","req","res","next","header","PORT","process","env","server","ApolloServer","typeDefs","resolvers","applyMiddleware","mongoose","connect","useNewUrlParser","useUnifiedTopology","listen","console","log","graphqlPath"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA;AACA;AAOA,IAAMA,WAAW;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,GADU,GACJ,0BADI;AAEhBA,YAAAA,GAAG,CAACC,GAAJ,CAAQC,IAAI,EAAZ;AACAF,YAAAA,GAAG,CAACG,GAAJ,CAAQ,IAAR,EAAc,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACrCD,cAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,cAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,kBAA3C;AACAD,cAAAA,IAAI;AACL,aAJD;AAKME,YAAAA,IARU,GAQHC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IARjB;AAUVG,YAAAA,MAVU,GAUD,IAAIC,iCAAJ,CAAiB;AAC5BC,cAAAA,QAAQ,EAARA,kBAD4B;AAE5BC,cAAAA,SAAS,EAATA;AAF4B,aAAjB,CAVC;AAedH,YAAAA,MAAM,CAACI,eAAP,CAAuB;AAAEf,cAAAA,GAAG,EAAHA;AAAF,aAAvB;AAfc;AAAA,mBAiBRgB,qBAASC,OAAT,CAAiB,kFAAjB,EAAoG;AACrGC,cAAAA,eAAe,EAAE,IADoF;AAErGC,cAAAA,kBAAkB,EAAE;AAFiF,aAApG,CAjBQ;;AAAA;AAsBdnB,YAAAA,GAAG,CAACoB,MAAJ,CAAWZ,IAAX,EAAiB;AAAA,qBACfa,OAAO,CAACC,GAAR,6DAAuDX,MAAM,CAACY,WAA9D,EADe;AAAA,aAAjB;;AAtBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXxB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AA4BAA,WAAW","sourcesContent":["import { ApolloServer, gql } from 'apollo-server-express';\r\nimport express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { typeDefs } from \"./typeDefs\";\r\nimport { resolvers } from \"./resolvers\";\r\nimport \"cors\";\r\n// const mongodb_uri =\"mongodb+srv://ad:ad@cluster0-uayz0.mongodb.net/graph?retryWrites=true&w=majority\"\r\n//mongodb://localhost:27017/graph\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst startServer = async () => {\r\n    const app = express();\r\n    app.use(cors());\r\n    app.all('/*', function(req, res, next) {\r\n      res.header(\"Access-Control-Allow-Origin\", \"*\");\r\n      res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\r\n      next();\r\n    });\r\n    const PORT = process.env.PORT || 4000;\r\n\r\n    const server = new ApolloServer({\r\n        typeDefs,\r\n        resolvers,\r\n      });\r\n      \r\n      server.applyMiddleware({ app });\r\n      \r\n      await mongoose.connect(\"mongodb+srv://ad:ad@cluster0-uayz0.mongodb.net/graph?retryWrites=true&w=majority\",{\r\n           useNewUrlParser: true, \r\n           useUnifiedTopology: true\r\n      });\r\n\r\n      app.listen(PORT, () =>\r\n        console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\r\n      );\r\n\r\n};\r\n\r\nstartServer();"],"file":"index.js"}